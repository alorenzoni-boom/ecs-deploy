name: Deploy
on: [push]
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
    - name: Code checkout
      uses: actions/checkout@v3
    
    - run: jq '.version' package.json

    #- name: SetUp nodejs version
    #  uses: actions/setup-node@v3
    #  with:
    #    node-version: "v14.18.1"
    #- run: yarn
    #- run: yarn build

    #- name: Login to image repository
    #  uses: docker/login-action@v2
    #  with:
    #    username: ${{ secrets.DOCKERHUB_USERNAME }}
    #    password: ${{ secrets.DOCKERHUB_TOKEN }}

    #- name: Build and push
    #  uses: docker/build-push-action@v3
    #  with:
    #    push: true
    #    context: .
    #    file: Dockerfile        
    #    tags: "alorenzoniboom/poc-nest:latest"

    #- name: Configure AWS credentials
    #  uses: aws-actions/configure-aws-credentials@v1
    #  with:
    #    aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #    aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #    aws-region: eu-west-1

    #- name: Fill in the new image ID in the Amazon ECS task definition
    #  id: task-definition
    #  uses: aws-actions/amazon-ecs-render-task-definition@v1
    #  with:
    #    task-definition: infra/task-definition.json
    #    container-name: test-fargate-container-staging
    #    image: "alorenzoniboom/poc-nest:latest"

    #- name: Deploy to Amazon ECS
    #  uses: aws-actions/amazon-ecs-deploy-task-definition@v1
    #  with:        
    #    task-definition: ${{ steps.task-definition.outputs.task-definition }}
    #    cluster: test-fargate-cluster-staging
    #    service: test-fargate-service-staging
    #    wait-for-service-stability: true
        #codedeploy-appspec: appspec.yaml
        #codedeploy-application: ecs-blue-green-deploy
        #codedeploy-deployment-group: production        